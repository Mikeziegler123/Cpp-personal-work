3080_lab2

/*Author:  Michael Ziegler
 *Course:  CSCI 3080
 *Lab number: Lab 2
 *Purpose: This program reads in dimensions of two matrices, then reads
 *in the matrices following their respective dimensions. Next, a character
 *(A for Addition), (S for Subtraction), and (M for multiplication) determines
 *which operation will be performed on these matrices. Matrices will be no bigger
 *than 10x10.

 *Due date:February 6, 2018 before 11:59pm
*/


#include <iostream>
using namespace std;

int main()
{
    int a[10][10], b[10][10], mult[10][10], r1, c1, r2, c2, i, j, k;
    int sum[10][10];
    string z;

//--------------------------------------------------------------------------------------------

    // Read in dimensions of the first matrix.
    cout << "input the row size and col size of A" << endl;
    cin >> r1 >> c1;

    // Store elements of first matrix.
    cout << endl << "input matrix A" << endl;
    for(i = 0; i < r1; ++i)
        for(j = 0; j < c1; ++j){
            cin >> a[i][j];
        }

//--------------------------------------------------------------------------------------------

    // Read in dimensions of the second matrix.
    cout << "input the row size and col size of B" << endl;
    cin >> r2 >> c2;

    // Store elements of second matrix.
    cout << endl << "input matrix B" << endl;
    for(i = 0; i < r2; ++i)
        for(j = 0; j < c2; ++j){
            cin >> b[i][j];
        }

//--------------------------------------------------------------------------------------------

    //Prompt user for input of either A(Add), S(Subtract), M(Multiply).
    cout << endl << "Choose your operation: A for add, S for subtract, M for multiply" << endl;
    cin >> z;

//--------------------------------------------------------------------------------------------
    //Addition (a[][] + b[][]).
    if (z == "A"){
    //Prompt error for non-compatible dimensions.
         while (c1!=c2 | r1!=r2)
    {
        cout << "dimensions are not compatible" << endl;
        cin >> z;
        return 0;
    }
        for(i = 0; i < r1; ++i)
            for(j = 0; j < c2; ++j)
              sum[i][j] = a[i][j] + b[i][j];

    //Display output.
    cout << "The answer is:" << endl;
        for(i = 0;i < r1; ++i){
            for(j = 0; j < c2; ++j)
                cout << sum[i][j] << " ";
                if( j == c1)
                cout << endl;
            }
        cin >> z;
    }
//--------------------------------------------------------------------------------------------
//Subtraction (a[][] - b[][]).
    else if (z == "S"){
    //Prompt error for non-compatible dimensions.
         while (c1!=c2 | r1!=r2)
    {
        cout << "dimensions are not compatible" << endl;
        cin >> z;
        return 0;
    }
         for(i = 0; i < r1; ++i)
            for(j = 0; j < c2; ++j)
              sum[i][j] = a[i][j] - b[i][j];

    //Display output.
    cout << "The answer is:" << endl;
        for(i = 0;i < r1; ++i){
            for(j = 0; j < c2; ++j)
                cout << sum[i][j] << " ";
                if( j == c1)
                cout << endl;
            }
        cin >> z;
    }
//--------------------------------------------------------------------------------------------
//Multiplication (a[][] * b[][]).
    else if (z == "M"){
    //Prompt error for non-compatible dimensions.
        while (c1!=r2)
    {
        cout << "dimensions are not compatible" << endl;
   cin >> z;
   return 0;
    }
       for(i = 0; i < r1; ++i){
            for(j = 0; j < c2; ++j)
                mult[i][j] = 0;
       }
        for(i = 0; i < r1; ++i)
            for(j = 0; j < c2; ++j)
                for(k = 0; k < c1; ++k){

                    mult[i][j] += a[i][k] * b[k][j];
                }


    //Display output.
    cout << "The answer is:" << endl;
        for(i = 0;i < r1; ++i){
            for(j = 0; j < c2; ++j)
               cout << mult[i][j] << " ";
                if( j == c1 - 1)
                cout << endl;
            }
        cin >> z;
    }
    return 0;
}
